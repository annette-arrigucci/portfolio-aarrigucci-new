@model portfolio_annette_arrigucci.Models.Comment

<section id="blog-edit">
    <div class="container">
        <div class="row">
            <div class="col-lg-12 text-center page-start">
                <h2>Edit Comment</h2>
                <hr class="star-primary">
            </div>
        </div>
        <div class="row">
            <div class="col-lg-8 col-lg-offset-1">
                @using (Html.BeginForm("Edit", "Comments", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)
                        @Html.HiddenFor(model => model.PostId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.HiddenFor(model => model.PostSlug, new { htmlAttributes = new { @class = "form-control" } })            

                        <div class="form-group">
                            @*@Html.LabelFor(model => model.PostSlug, "PostSlug", htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-md-10">
                                @Html.ActionLink("View original post", "Details", "BlogPosts", new { slug = Model.PostSlug }, null)
                                
                                @*@Html.ValidationMessageFor(model => model.PostId, "", new { @class = "text-danger" })*@
                            </div>
                        </div>

                        <div class="form-group">
                            <p>@Html.LabelFor(model => model.AuthorId, "Author", htmlAttributes: new { @class = "control-label col-md-3" })</p>
                            <div class="col-md-9">
                                @if (Model.Author != null)
                                {
                                    <p>@Model.Author.FirstName&nbsp;@Model.Author.LastName</p>
                                }
                                @Html.EditorFor(model => model.AuthorId, new { htmlAttributes = new { @class = "form-control", @type = "hidden" } })
                                @Html.ValidationMessageFor(model => model.AuthorId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <p>@Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-3" })</p>
                            <div class="col-md-9">
                                @Html.TextAreaFor(model => model.Body, new { @class = "form-control", @rows = "4"} )
                                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <p>@Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-3" })</p>
                            <div class="col-md-9">
                                <p>@TimeZoneInfo.ConvertTime(Model.Created, TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time")).ToString("M/dd/yy h:mm tt")</p>
                                @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control", @type = "hidden" } })
                                @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @if (Model.Updated != null)
                        {
                            <div class="form-group">
                                <p>@Html.LabelFor(model => model.Updated, "Last Updated", htmlAttributes: new { @class = "control-label col-md-3" })</p>
                                <div class="col-md-9">
                                    <p>@TimeZoneInfo.ConvertTime((System.DateTimeOffset)Model.Updated, TimeZoneInfo.FindSystemTimeZoneById("Eastern Standard Time")).ToString("M/dd/yy h:mm tt")</p>
                                </div>
                            </div>
                        }

                        @*<div class="form-group">
                            @Html.LabelFor(model => model.Updated, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Updated, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Updated, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                        <div class="form-group">
                            <p>@Html.LabelFor(model => model.UpdateReason, "Update Reason", htmlAttributes: new { @class = "control-label col-md-3" })</p>
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.UpdateReason, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UpdateReason, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-3 col-md-9">
                                <input type="submit" value="Save" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }

                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>
            </div>
        </div>
    </div>
</section>
